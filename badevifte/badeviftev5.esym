D G "__PCM__" 0 0 ""4.038""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""06-apr-08""
D G "__TIME__" 0 0 ""15:21:35"" "Datastyring for baderomsvifte, basert på relativ luftfuktighet (HIH3610 sensor) og temperatur (NTC sensor)."
d G "PIN_A0" 1 19 "40"
d G "PIN_A1" 1 20 "41"
d G "PIN_A2" 1 21 "42"
d G "PIN_A3" 1 22 "43"
d G "PIN_A4" 1 23 "44"
d G "PIN_A5" 1 24 "45"
d G "PIN_B0" 1 26 "48"
d G "PIN_B1" 1 27 "49"
d G "PIN_B2" 1 28 "50"
d G "PIN_B3" 1 29 "51"
d G "PIN_B4" 1 30 "52"
d G "PIN_B5" 1 31 "53"
d G "PIN_B6" 1 32 "54"
d G "PIN_B7" 1 33 "55"
d G "PIN_C0" 1 35 "56"
d G "PIN_C1" 1 36 "57"
d G "PIN_C2" 1 37 "58"
d G "PIN_C3" 1 38 "59"
d G "PIN_C4" 1 39 "60"
d G "PIN_C5" 1 40 "61"
d G "PIN_C6" 1 41 "62"
d G "PIN_C7" 1 42 "63"
d G "FALSE" 1 45 "0"
d G "TRUE" 1 46 "1"
d G "BYTE" 1 48 "int"
d G "BOOLEAN" 1 49 "short int"
d G "getc" 1 51 "getch"
d G "fgetc" 1 52 "getch"
d G "getchar" 1 53 "getch"
d G "putc" 1 54 "putchar"
d G "fputc" 1 55 "putchar"
d G "fgets" 1 56 "gets"
d G "fputs" 1 57 "puts"
d G "WDT_FROM_SLEEP" 1 62 "3"
d G "WDT_TIMEOUT" 1 63 "11"
d G "MCLR_FROM_SLEEP" 1 64 "19"
d G "MCLR_FROM_RUN" 1 65 "27"
d G "NORMAL_POWER_UP" 1 66 "24"
d G "BROWNOUT_RESTART" 1 67 "26"
d G "RTCC_INTERNAL" 1 75 "0"
d G "RTCC_EXT_L_TO_H" 1 76 "32"
d G "RTCC_EXT_H_TO_L" 1 77 "48"
d G "RTCC_DIV_1" 1 79 "8"
d G "RTCC_DIV_2" 1 80 "0"
d G "RTCC_DIV_4" 1 81 "1"
d G "RTCC_DIV_8" 1 82 "2"
d G "RTCC_DIV_16" 1 83 "3"
d G "RTCC_DIV_32" 1 84 "4"
d G "RTCC_DIV_64" 1 85 "5"
d G "RTCC_DIV_128" 1 86 "6"
d G "RTCC_DIV_256" 1 87 "7"
d G "RTCC_8_BIT" 1 90 "0"
d G "WDT_18MS" 1 101 "0x8008"
d G "WDT_36MS" 1 102 "9"
d G "WDT_72MS" 1 103 "10"
d G "WDT_144MS" 1 104 "11"
d G "WDT_288MS" 1 105 "12"
d G "WDT_576MS" 1 106 "13"
d G "WDT_1152MS" 1 107 "14"
d G "WDT_2304MS" 1 108 "15"
d G "T1_DISABLED" 1 114 "0"
d G "T1_INTERNAL" 1 115 "0x85"
d G "T1_EXTERNAL" 1 116 "0x87"
d G "T1_EXTERNAL_SYNC" 1 117 "0x83"
d G "T1_CLK_OUT" 1 119 "8"
d G "T1_DIV_BY_1" 1 121 "0"
d G "T1_DIV_BY_2" 1 122 "0x10"
d G "T1_DIV_BY_4" 1 123 "0x20"
d G "T1_DIV_BY_8" 1 124 "0x30"
d G "T2_DISABLED" 1 129 "0"
d G "T2_DIV_BY_1" 1 130 "4"
d G "T2_DIV_BY_4" 1 131 "5"
d G "T2_DIV_BY_16" 1 132 "6"
d G "CCP_OFF" 1 138 "0"
d G "CCP_CAPTURE_FE" 1 139 "4"
d G "CCP_CAPTURE_RE" 1 140 "5"
d G "CCP_CAPTURE_DIV_4" 1 141 "6"
d G "CCP_CAPTURE_DIV_16" 1 142 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 143 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 144 "9"
d G "CCP_COMPARE_INT" 1 145 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 1 146 "0xB"
d G "CCP_PWM" 1 147 "0xC"
d G "CCP_PWM_PLUS_1" 1 148 "0x1c"
d G "CCP_PWM_PLUS_2" 1 149 "0x2c"
d G "CCP_PWM_PLUS_3" 1 150 "0x3c"
v G "CCP_1" 1 151 "int16"
v G "CCP_2" 1 155 "int16"
d G "SPI_MASTER" 1 162 "0x20"
d G "SPI_SLAVE" 1 163 "0x24"
d G "SPI_L_TO_H" 1 164 "0"
d G "SPI_H_TO_L" 1 165 "0x10"
d G "SPI_CLK_DIV_4" 1 166 "0"
d G "SPI_CLK_DIV_16" 1 167 "1"
d G "SPI_CLK_DIV_64" 1 168 "2"
d G "SPI_CLK_T2" 1 169 "3"
d G "SPI_SS_DISABLED" 1 170 "1"
d G "SPI_SAMPLE_AT_END" 1 172 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 173 "0x4000"
d G "UART_ADDRESS" 1 179 "2"
d G "UART_DATA" 1 180 "4"
d G "ADC_OFF" 1 187 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 188 "0x100"
d G "ADC_CLOCK_DIV_8" 1 189 "0x40"
d G "ADC_CLOCK_DIV_32" 1 190 "0x80"
d G "ADC_CLOCK_INTERNAL" 1 191 "0xc0" "Internal 2-6us"
d G "NO_ANALOGS" 1 195 "7" "None"
d G "ALL_ANALOG" 1 196 "0" "A0 A1 A2 A3 A4"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 1 197 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 1 198 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 1 199 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_VREF_VREF" 1 200 "0x08" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 1 201 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 1 202 "0x0E" "A0"
d G "AN0_VREF_VREF" 1 203 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 1 204 "0x1" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 1 205 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 1 206 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 1 207 "0x8" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 1 208 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 1 209 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 1 210 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 1 214 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 215 "1"
d G "ADC_READ_ONLY" 1 216 "6"
d G "L_TO_H" 1 225 "0x40"
d G "H_TO_L" 1 226 "0"
d G "GLOBAL" 1 228 "0x0BC0"
d G "INT_RTCC" 1 229 "0x0B20"
d G "INT_RB" 1 230 "0xFF0B08"
d G "INT_EXT" 1 231 "0x0B10"
d G "INT_AD" 1 232 "0x8C40"
d G "INT_TBE" 1 233 "0x8C10"
d G "INT_RDA" 1 234 "0x8C20"
d G "INT_TIMER1" 1 235 "0x8C01"
d G "INT_TIMER2" 1 236 "0x8C02"
d G "INT_CCP1" 1 237 "0x8C04"
d G "INT_CCP2" 1 238 "0x8D01"
d G "INT_SSP" 1 239 "0x8C08"
d G "INT_BUSCOL" 1 240 "0x8D08"
d G "INT_EEPROM" 1 241 "0x8D10"
d G "INT_TIMER0" 1 242 "0x0B20"
D G "YES" 2 12 "1"
D G "NO" 2 16 "0"
D G "HIGH" 2 20 "1"
D G "LOW" 2 24 "0"
D G "ON" 2 28 "1"
D G "OFF" 2 32 "0"
D G "UP" 2 36 "1"
D G "DOWN" 2 40 "0"
D G "UCHAR" 2 44 "char"
D G "UINT" 2 48 "long"
D G "BIT" 2 52 "short"
D G "SCHAR" 2 56 "signed int"
D G "SINT" 2 60 "signed long"
D G "FLOAT" 2 64 "float"
D G "MATH_H" 3 21 ""
D G "PI" 3 26 "3.141592654"
D G "SQRT2" 3 29 "1.41421356"
C L "CEIL_FLOOR" 3 2 3 "FUNCTION"
V L "x" 3 36 "float"
V L "n" 3 36 "int8"
F G "CEIL_FLOOR" 3 37 "float(float x,int8 n)"
V L "y" 3 38 "float"
V L "res" 3 38 "float"
V L "l" 3 39 "int16"
V L "s" 3 40 "int1"
C L "floor" 3 2 3 "FUNCTION"
V L "x" 3 90 "float"
F G "floor" 3 91 "float(float x)"
C L "ceil" 3 2 3 "FUNCTION"
V L "x" 3 101 "float"
F G "ceil" 3 102 "float(float x)"
D G "fabs" 3 113 "abs"
C L "fmod" 3 2 6 "FUNCTION"
V L "x" 3 125 "float"
V L "y" 3 125 "float"
F G "fmod" 3 126 "float(float x,float y)"
V L "i" 3 127 "float"
D G "LN2" 3 145 "0.6931471806"
V G "pe" 3 147 "float[6]"
C L "exp" 3 2 3 "FUNCTION"
V L "x" 3 156 "float"
F G "exp" 3 157 "float(float x)"
V L "y" 3 158 "float"
V L "res" 3 158 "float"
V L "r" 3 158 "float"
V L "n" 3 159 "sint8"
V L "s" 3 160 "int1"
V G "pl" 3 199 "float[4]"
V G "ql" 3 200 "float[4]"
C L "log" 3 2 3 "FUNCTION"
V L "x" 3 208 "float"
F G "log" 3 209 "float(float x)"
V L "y" 3 210 "float"
V L "res" 3 210 "float"
V L "r" 3 210 "float"
V L "y2" 3 210 "float"
V L "n" 3 212 "sint8"
D G "LN10" 3 260 "2.30258509"
C L "log10" 3 2 3 "FUNCTION"
V L "x" 3 268 "float"
F G "log10" 3 269 "float(float x)"
V L "r" 3 270 "float"
C L "modf" 3 2 6 "FUNCTION"
V L "value" 3 287 "float"
V L "iptr" 3 287 "*float"
F G "modf" 3 288 "float(float value,*float iptr)"
C L "pwr" 3 2 3 "FUNCTION"
V L "x" 3 300 "float"
V L "y" 3 300 "float"
F G "pwr" 3 301 "float(float x,float y)"
C L "pow" 3 2 4 "FUNCTION"
V L "x" 3 317 "float"
V L "y" 3 317 "float"
F G "pow" 3 318 "float(float x,float y)"
C L "sqrt" 3 2 3 "FUNCTION"
V L "x" 3 331 "float"
F G "sqrt" 3 332 "float(float x)"
V L "y" 3 333 "float"
V L "res" 3 333 "float"
V L "p" 3 334 "*int8"
D G "PI_DIV_BY_TWO" 3 365 "1.570796326794896"
C L "cos" 3 2 3 "FUNCTION"
V L "x" 3 376 "float"
F G "cos" 3 377 "float(float x)"
V L "y" 3 378 "float"
V L "t" 3 378 "float"
V L "t2" 3 378 "float"
V L "quad" 3 379 "int8"
V L "i" 3 379 "int8"
V L "frac" 3 380 "float"
V L "p" 3 381 "float[4]"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "sin" 3 2 3 "FUNCTION"
V L "x" 3 421 "float"
F G "sin" 3 422 "float(float x)"
C L "tan" 3 2 3 "FUNCTION"
V L "x" 3 432 "float"
F G "tan" 3 433 "float(float x)"
V L "c" 3 434 "float"
V L "s" 3 434 "float"
V G "pas" 3 446 "float[3]"
V G "qas" 3 447 "float[3]"
V L "x" 3 449 "float"
V L "n" 3 449 "int8"
F G "ASIN_COS" 3 450 "float(float x,int8 n)"
V L "y" 3 451 "float"
V L "res" 3 451 "float"
V L "r" 3 451 "float"
V L "y2" 3 451 "float"
V L "s" 3 452 "int1"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "asin" 3 2 3 "FUNCTION"
V L "x" 3 501 "float"
F G "asin" 3 502 "float(float x)"
V L "r" 3 503 "float"
C L "acos" 3 2 3 "FUNCTION"
V L "x" 3 516 "float"
F G "acos" 3 517 "float(float x)"
V L "r" 3 518 "float"
V G "pat" 3 524 "float[4]"
V G "qat" 3 525 "float[4]"
C L "atan" 3 2 3 "FUNCTION"
V L "x" 3 533 "float"
F G "atan" 3 534 "float(float x)"
V L "y" 3 535 "float"
V L "res" 3 535 "float"
V L "r" 3 535 "float"
V L "s" 3 536 "int1"
V L "flag" 3 536 "int1"
C L "atan" 3 2 1 "FUNCTION"
C L "atan2" 3 2 5 "FUNCTION"
V L "y" 3 583 "float"
V L "x" 3 583 "float"
F G "atan2" 3 584 "float(float y,float x)"
V L "z" 3 585 "float"
V L "sign" 3 586 "int1"
V L "quad" 3 587 "int8"
C L "atan2" 3 2 1 "FUNCTION"
C L "atan2" 3 2 1 "FUNCTION"
C L "cosh" 3 2 5 "FUNCTION"
V L "x" 3 662 "float"
F G "cosh" 3 663 "float(float x)"
C L "sinh" 3 2 4 "FUNCTION"
V L "x" 3 675 "float"
F G "sinh" 3 676 "float(float x)"
C L "tanh" 3 2 4 "FUNCTION"
V L "x" 3 689 "float"
F G "tanh" 3 690 "float(float x)"
D G "LOG2" 3 707 ".30102999566398119521"
V L "x" 3 708 "float"
V L "exp" 3 708 "*sint8"
F G "frexp" 3 709 "float(float x,*sint8 exp)"
V L "res" 3 710 "float"
V L "sign" 3 711 "int1"
C L "ldexp" 3 2 4 "FUNCTION"
V L "value" 3 760 "float"
V L "exp" 3 760 "sint8"
F G "ldexp" 3 761 "float(float value,sint8 exp)"
C L "r2temperature" 4 1 1 "*"
V L "ohm" 4 5 "float"
F G "r2temperature" 4 5 "float(float ohm)"
V L "adc_value" 4 6 "int8"
F G "adc_2_ohm" 4 6 "float(int8 adc_value)" "+5V"
C L "adc_2_ohm" 4 1 6 "FUNCTION"
C L "adc_2_ohm" 4 18 1 "*"
C L "adc_2_ohm" 4 18 1 "*"
D G "NTC_PULLUP_R" 4 26 "9850.0	" "calibrated 10k"
D G "NTC_B" 4 33 "3177"
D G "NTC_TN" 4 35 "25"
D G "NTC_RN" 4 37 "950"
C L "adc_2_ohm" 4 18 10 "FUNCTION"
D G "LCD_D0" 5 2 "PIN_C3"
D G "LCD_D1" 5 3 "PIN_C4"
D G "LCD_D2" 5 4 "PIN_C5"
D G "LCD_D3" 5 5 "PIN_C6"
D G "LCD_EN" 5 6 "PIN_B5"
D G "LCD_RS" 5 7 "PIN_B6"
D G "LINE_1" 5 8 "0x00"
D G "LINE_2" 5 9 "0x40"
D G "CLEAR_DISP" 5 10 "0x01"
F G "LCD_Init" 5 13 "void()"
V L "cX" 5 14 "int8"
F G "LCD_SetPosition" 5 14 "void(int8 cX)"
V L "cX" 5 15 "int8"
F G "LCD_PutChar" 5 15 "void(int8 cX)"
V L "cX" 5 16 "int8"
F G "LCD_PutCmd" 5 16 "void(int8 cX)"
F G "LCD_PulseEnable" 5 17 "void()"
V L "cX" 5 18 "int8"
F G "LCD_SetData" 5 18 "void(int8 cX)"
F G "PrintMenu" 5 19 "void()" "ADC"
D G "VDD" 0 43 "5.00"
D G "MINIMUM_INTERVAL" 0 47 "3" "minimum minutes to run when auto started (prevent hysteresis)"
D G "MAXIMUM_RH_1" 0 48 "55" "rh % level 1 when fan should start (set with jumpers)"
D G "MAXIMUM_RH_2" 0 49 "MAXIMUM_RH_1+10" "rh % level 2 when fan should start (set with jumpers)"
D G "MINIMUM_TEMP" 0 50 "22" "°C, never auto run if under this"
D G "DELAYED_INTERVAL" 0 51 "10" "minutes to run from delayed mode started"
D G "MENU_SWITCH" 0 54 "PIN_C1"
D G "INCLUDE_TEMP_JUMPER" 0 55 "PIN_C2"
D G "LED_1" 0 56 "PIN_B3" "pinne 24"
D G "LED_2" 0 57 "PIN_B4" "pinne 25"
D G "FAN_1" 0 58 "PIN_C0"
D G "RH_LIMIT_2_JUMPER" 0 59 "PIN_A4" "pinne 6"
D G "STATE_AUTO" 0 62 "0"
D G "STATE_START" 0 63 "1"
D G "STATE_STOP" 0 64 "2"
D G "STATE_DELAYED" 0 65 "3"
D G "MAX_MENU_STATE" 0 66 "3"
D G "C_PERCENT" 0 69 "0x25" "% = 00100101 = 25 = 0x25"
D G "C_DEGREES" 0 70 "0xDF" "° = 11011111 = DF = 0xDF"
D G "hi" 0 73 "(x)  (*(&x+1))"
C L "PrintMenu" 0 46 1 "FUNCTION"
F G "SetTime" 0 82 "void()"
F G "CheckSwitches" 0 83 "void()"
F G "printVersionInfo" 0 84 "void()"
F G "DisplaySettings" 0 85 "void()"
F G "DisplayData" 0 86 "void()"
F G "DelayedFan" 0 87 "void()"
F G "StartFan" 0 88 "void()"
F G "StopFan" 0 89 "void()"
F G "AutoFan" 0 90 "void()"
F G "getRH" 0 91 "float()"
F G "getTemp" 0 92 "float()"
F G "getInterval" 0 93 "float()"
V G "cDisplayDataFlag" 0 95 "int8"
V G "cFan1Flag" 0 95 "int8"
V G "cInterruptCount" 0 96 "int8"
V G "cMenuState" 0 97 "int8"
V G "cSelectFlag" 0 97 "int8"
V G "cMenuSwitchOn" 0 98 "int8"
V G "cMenuSwitchCount" 0 98 "int8"
V G "cSelectSwitchOn" 0 99 "int8"
V G "cSelectSwitchCount" 0 99 "int8"
V G "cDisplayUpdate" 0 100 "int8"
V G "cToggleFlag" 0 100 "int8"
V G "cToggleFlagLCD" 0 100 "int8"
V G "cDisplaySettingsFlag" 0 100 "int8"
V G "cFan1RunTime" 0 101 "int8"
V G "cFan1DelayedRunTime" 0 101 "int8"
V G "cFan1AutoState" 0 101 "int8"
V G "cFan1DelayedState" 0 101 "int8"
V G "cFan1CanStop" 0 101 "int8"
V G "IntervalMinutes" 0 101 "int8" "this function converts the ADC value into an Ohm value of the NTC"
C L "getInterval" 6 3 1 "*"
V L "adc_value" 6 6 "int8"
F G "adc_2_ohm" 6 7 "float(int8 adc_value)"
V L "ohm" 6 8 "float" "10bit adc=0..1023 over a voltage range from 0-5V"
C L "adc_2_ohm" 6 3 4 "FUNCTION"
C L "adc_2_ohm" 6 3 1 "FUNCTION"
C L "r2temperature" 6 3 1 "FUNCTION"
C L "r2temperature" 6 26 1 "*"
C L "r2temperature" 6 26 1 "*"
V L "ohm" 6 29 "float"
F G "r2temperature" 6 30 "float(float ohm)"
V L "tcelsius" 6 31 "float"
V L "tmp" 6 32 "float"
C L "r2temperature" 6 26 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
F G "LCD_Init" 7 6 "void()"
C L "LCD_Init" 7 3 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
C L "LCD_Init" 7 3 1 "FUNCTION"
V L "cX" 7 22 "int8"
F G "LCD_SetPosition" 7 23 "void(int8 cX)" "this subroutine works specifically for 4-bit Port A"
V L "cX" 7 31 "int8"
F G "LCD_PutChar" 7 32 "void(int8 cX)" "this subroutine works specifically for 4-bit Port A"
C L "LCD_PutChar" 7 3 1 "FUNCTION"
C L "LCD_PutChar" 7 3 1 "FUNCTION"
V L "cX" 7 42 "int8"
F G "LCD_PutCmd" 7 43 "void(int8 cX)" "this subroutine works specifically for 4-bit Port A"
C L "LCD_PutCmd" 7 3 1 "FUNCTION"
C L "LCD_PutCmd" 7 3 1 "FUNCTION"
F G "LCD_PulseEnable" 7 52 "void()"
V L "cX" 7 59 "int8"
F G "LCD_SetData" 7 60 "void(int8 cX)"
C L "TimerInterrupt" 0 106 20 "FUNCTION"
C L "TimerInterrupt" 0 106 1 "FUNCTION"
F G "TimerInterrupt" 0 149 "void(int8 cX)"
C L "TimerInterrupt" 0 106 1 "FUNCTION"
C L "TimerInterrupt" 0 106 1 "FUNCTION"
C L "TimerInterrupt" 0 106 1 "FUNCTION"
C L "TimerInterrupt" 0 162 2 "*"
C L "TimerInterrupt" 0 162 1 "FUNCTION"
C L "TimerInterrupt" 0 162 1 "FUNCTION"
C L "TimerInterrupt" 0 162 1 "FUNCTION"
C L "TimerInterrupt" 0 162 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "*"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
C L "TimerInterrupt" 0 182 1 "FUNCTION"
F G "printVersionInfo" 0 258 "void()"
F G "main" 0 266 "void()"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 2 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
C L "main" 0 182 1 "FUNCTION"
F G "PrintMenu" 0 329 "void()" "PRINT LOWER LINE OF MENU"
C L "PrintMenu" 0 182 1 "FUNCTION"
C L "PrintMenu" 0 182 1 "FUNCTION"
F G "CheckSwitches" 0 376 "void()" "INCREMENT/DECREMENT MENU"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 2 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
C L "CheckSwitches" 0 182 1 "FUNCTION"
F G "DisplaySettings" 0 469 "void()"
C L "DisplaySettings" 0 182 1 "FUNCTION"
C L "DisplaySettings" 0 182 1 "FUNCTION"
C L "DisplaySettings" 0 182 1 "FUNCTION"
C L "DisplaySettings" 0 182 1 "FUNCTION"
C L "DisplaySettings" 0 182 1 "FUNCTION"
F G "DisplayData" 0 536 "void()"
V L "f_rh" 0 537 "float"
V L "f_temp" 0 538 "float"
C L "DisplayData" 0 182 1 "FUNCTION"
C L "DisplayData" 0 182 1 "FUNCTION"
C L "DisplayData" 0 182 1 "FUNCTION"
C L "DisplayData" 0 182 1 "FUNCTION"
C L "DisplayData" 0 182 1 "FUNCTION"
C L "DisplayData" 0 182 1 "FUNCTION"
C L "DisplayData" 0 182 1 "FUNCTION"
F G "getTemp" 0 603 "float()"
V L "adc_value" 0 604 "int16"
V L "ohm" 0 605 "float"
V L "tcelsius" 0 605 "float" "see ntc.h and ntc.c"
C L "getTemp" 0 182 1 "FUNCTION"
F G "getRH" 0 621 "float()"
V L "adc_value" 0 623 "int16"
V L "adc_volt" 0 624 "float"
V L "rh" 0 624 "float"
C L "getRH" 0 182 8 "FUNCTION"
C L "getRH" 0 182 1 "FUNCTION"
C L "getRH" 0 182 1 "FUNCTION"
C L "getRH" 0 182 1 "FUNCTION"
C L "getRH" 0 182 1 "FUNCTION"
F G "getInterval" 0 656 "float()"
V L "adc_value" 0 658 "int16"
V L "interval" 0 659 "float"
C L "getInterval" 0 182 1 "FUNCTION"
C L "getInterval" 0 182 2 "FUNCTION"
C L "getInterval" 0 182 1 "FUNCTION"
C L "getInterval" 0 182 2 "FUNCTION"
C L "Reboot" 0 182 3 "FUNCTION"
F G "Reboot" 0 687 "void()"
F G "StartFan" 0 692 "void()"
F G "StopFan" 0 698 "void()"
F G "DelayedFan" 0 704 "void()"
C L "DelayedFan" 0 182 1 "FUNCTION"
C L "DelayedFan" 0 182 1 "FUNCTION"
C L "DelayedFan" 0 182 1 "FUNCTION"
C L "DelayedFan" 0 182 1 "FUNCTION"
C L "DelayedFan" 0 182 1 "FUNCTION"
F G "AutoFan" 0 736 "void()"
V L "rh" 0 737 "float"
V L "tcelsius" 0 737 "float"
V L "SELECTED_RH_LIMIT" 0 738 "float"
C L "AutoFan" 0 182 1 "FUNCTION"
C L "AutoFan" 0 182 1 "FUNCTION"
C L "AutoFan" 0 182 1 "FUNCTION"
C L "AutoFan" 0 182 1 "FUNCTION"
C L "AutoFan" 0 182 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
