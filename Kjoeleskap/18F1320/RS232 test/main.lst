CCS PCH C Compiler, Version 4.104, 5967               09-okt-10 10:51

               Filename: C:\kenny\PIC\Kjøleskap\18F1320\RS232 test\main.lst

               ROM used: 244 bytes (3%)
                         Largest free fragment is 7948
               RAM used: 5 (2%) at main() level
                         7 (3%) worst case
               Stack:    2 locations

*
0000:  GOTO   00A4
.................... #include "18F1320.h" 
.................... //////// Standard Header file for the PIC18F1320 device //////////////// 
.................... #device PIC18F1320 
.................... #list 
....................  
....................  
.................... /****** LEDS ************* 
.................... com=low and DL1=high: green 
.................... com=high and DL1/DL2=low: orange 
.................... com=low and DL3=high: red 
.................... - com usually low = green 
.................... ***************************/ 
.................... #device adc=10 *=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES INTRC_IO              	//Internal RC Osc, no CLKOUT 
.................... #FUSES NOFCMEN               	//Fail-safe clock monitor disabled 
.................... #FUSES NOBROWNOUT              	//Reset when brownout detected 
.................... #FUSES BORV27                	//Brownout reset at 2.7V 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOIESO                	//Internal External Switch Over mode disabled 
.................... //#FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOWRTB                	//Boot block not write protected 
....................  
....................  
.................... #use delay(clock=4000000) 
007A:  CLRF   FEA
007C:  MOVLW  06
007E:  MOVWF  FE9
0080:  MOVF   FEF,W
0082:  BZ    00A0
0084:  MOVLW  01
0086:  MOVWF  01
0088:  CLRF   00
008A:  DECFSZ 00,F
008C:  BRA    008A
008E:  DECFSZ 01,F
0090:  BRA    0088
0092:  MOVLW  4A
0094:  MOVWF  00
0096:  DECFSZ 00,F
0098:  BRA    0096
009A:  BRA    009C
009C:  DECFSZ FEF,F
009E:  BRA    0084
00A0:  GOTO   00EC (RETURN)
.................... #use rs232(baud=9600,parity=N,xmit=PIN_A6,rcv=PIN_A7,bits=8) 
*
0016:  BCF    F92.6
0018:  BCF    F89.6
001A:  MOVLW  08
001C:  MOVWF  01
001E:  BRA    0020
0020:  NOP   
0022:  BSF    01.7
0024:  BRA    0042
0026:  BCF    01.7
0028:  RRCF   07,F
002A:  BTFSC  FD8.0
002C:  BSF    F89.6
002E:  BTFSS  FD8.0
0030:  BCF    F89.6
0032:  BSF    01.6
0034:  BRA    0042
0036:  BCF    01.6
0038:  DECFSZ 01,F
003A:  BRA    0028
003C:  BRA    003E
003E:  NOP   
0040:  BSF    F89.6
0042:  MOVLW  1C
0044:  MOVWF  FE9
0046:  DECFSZ FE9,F
0048:  BRA    0046
004A:  BRA    004C
004C:  BTFSC  01.7
004E:  BRA    0026
0050:  BTFSC  01.6
0052:  BRA    0036
0054:  GOTO   006C (RETURN)
....................  
.................... #use standard_io(A) 
....................  
.................... void main() 
.................... { 
*
00A4:  CLRF   FF8
00A6:  BCF    FD0.7
00A8:  CLRF   FEA
00AA:  CLRF   FE9
00AC:  MOVLW  62
00AE:  MOVWF  FD3
00B0:  MOVF   FD3,W
00B2:  BCF    F92.6
00B4:  BSF    F89.6
00B6:  BCF    FC2.6
00B8:  BCF    FC2.7
00BA:  MOVF   FC1,W
00BC:  ANDLW  80
00BE:  IORLW  7F
00C0:  MOVWF  FC1
....................  
....................     
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_4|RTCC_8_bit); // ISR 1ms 
00C2:  MOVLW  C1
00C4:  MOVWF  FD5
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); // ISR 524ms 
00C6:  MOVLW  B5
00C8:  MOVWF  FCD
....................    //setup_timer_2(T2_DIV_BY_1,255,16); // OF 256us, ISR 4ms 
....................    setup_timer_2(T2_DIV_BY_4,255,1); // OF 1ms, ISR 1ms 
00CA:  MOVLW  00
00CC:  IORLW  05
00CE:  MOVWF  FCA
00D0:  MOVLW  FF
00D2:  MOVWF  FCB
....................    setup_timer_3(T3_INTERNAL|T3_DIV_BY_1); // OF 65,5ms 
00D4:  MOVLW  85
00D6:  MOVWF  FB1
....................     
....................            
....................    
.................... while(true) 
.................... { 
....................    
....................   
....................   printf("Startup complete "); 
00D8:  MOVLW  04
00DA:  MOVWF  FF6
00DC:  MOVLW  00
00DE:  MOVWF  FF7
00E0:  BRA    0058
.................... delay_ms(1000); 
00E2:  MOVLW  04
00E4:  MOVWF  05
00E6:  MOVLW  FA
00E8:  MOVWF  06
00EA:  BRA    007A
00EC:  DECFSZ 05,F
00EE:  BRA    00E6
.................... } 
00F0:  BRA    00D8
....................  
.................... }   
00F2:  SLEEP 

Configuration Fuses:
   Word  1: 0800   INTRC_IO NOFCMEN NOIESO
   Word  2: 0E09   NOBROWNOUT WDT128 NOWDT BORV27 NOPUT
   Word  3: 0000   NOMCLR
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C003   NOCPD NOPROTECT NOCPB
   Word  6: E003   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 4003   NOEBTR NOEBTRB
